[Gui]
# Gui module to use (PyQt5)
module = PyQt5
# Start Photobooth in fullscreen mode (True/False)
fullscreen = False
# Width of Photobooth (if not fullscreen)
width = 480
# Height of Photobooth (if not fullscreen)
height = 800
# Hide cursor
hide_cursor = False
# Use specified style ('default' or see other options under photobooth/gui/Qt5Gui/__init__.py)
style = default

[Camera]
# Camera module to use (python-gphoto2, gphoto2-cffi, gphoto2-commandline, 
# opencv, picamera, picamera2, dummy)
module = python-gphoto2
# Specify rotation of camera in degree (possible values: 0, 90, 180, 270)
rotation = 0

[Gpio]
# Enable use of two buttons by GPIO (True/False)
enable_button = False
# BOARD pin 18 (BCM pin 24) lets you return to start screen
exit_pin = 24
# BOARD pin 16 (BCM pin 23) triggers capturing pictures
trigger_pin = 23
# Enable use of light by GPIO (True/False)
enable_light = False
# BOARD pin 7 (BCM pin 4) switches the lamp on and off
lamp_pin = 4
# BOARD pin  (BCM pin 17) switches the blue channel
chan_b_pin = 17
# BOARD pin  (BCM pin 27) switches the red channel
chan_r_pin = 27
# BOARD pin  (BCM pin 22) switches the green channel
chan_g_pin = 22

[Printer]
# Enable printing (True/False)
enable = True
# Print to PDF (True/False) for debugging purposes
pdf = False
# Ask for confirmation before printing
confirmation = True
# Printer module to use (PyQt5, PyCUPS)
module = PyQt5
# Paper width in mm
width = 100
# Paper height in mm
height = 148

[Photobooth]
# Show preview while posing time (True/False)
show_preview = True
# Greeter time in seconds (shown before countdown)
greeter_time = 5
# Countdown length in seconds (shown before every shot)
countdown_time = 3
# Display time of assembled picture (shown after last shot)
display_time = 3
# Timeout for postprocessing (shown after review)
postprocess_time = 60
# Overwrite displayed error message (Leave empty for none)
overwrite_error_message =

[Template]
# Templating module to use to assemple final picture (standard, fancy, or see other options under photobooth/template/__init__.py)
module = standard
# template file if FancyTemplate
template = supplementals/templates/example.xml

# Used by StandardTemplate module
[Picture]
# Number of pictures in horizontal direction
num_x = 2
# Number of pictures in vertical direction
num_y = 2
# Size of output picture in horizontal direction
size_x = 2362
# Size of output picture in vertical direction
size_y = 3496
# Minimum distance between thumbnails in horizontal direction
inner_dist_x = 20
# Minimum distance between thumbnails in vertical direction
inner_dist_y = 20
# Minimum distance of thumbnails to border in horizontal direction
outer_dist_x = 40
# Minimum distance of thumbnails to border in vertical direction
outer_dist_y = 40
# Leave out the specified pictures, e.g. for a logo (comma-separated list)
skip =
# Specify background image (filename, optional)
background =

[Slideshow]
# Wait time until slideshow starts 
start_slideshow_time = 60
# Time between the pictures
pic_slideshow_time = 5
# Fades transition between pictures
fade = False

[Gallery]
# Columns to show in the gallery
columns = 2
# Size of thumbnail picture in horizontal direction
size_x = 180
# Size of thumbnail picture in vertical direction
size_y = 240


[Storage]
# Basedir of output pictures (use for example '%Y-%m-%d'-style paths for dated dirs)
basedir = images
# Basename of output pictures
basename = photobooth
# Keep single pictures (True/False)
keep_pictures = False

[Mailer]
# Enable/disable mailer
enable = False
# Sender address
sender = photobooth@example.com
# Recipient address
recipient = photobooth@example.com
# Mail subject
subject = A new picture from the photobooth
# Mail message
message = Sent by the photobooth (https://github.com/reuterbal/photobooth)
# SMTP server name
server = localhost
# SMTP server port
port = 25
# SMTP server requires authentication
use_auth = True
# SMTP username
user =
# SMTP password
password =
# SSL connection
use_tls = False

[UploadWebdav]
# Enable/disable webdav upload
enable = False
# URL at webdav server where files should be uploaded
url = https://example.com/remote.php/webdav/Photobooth/
# Webdav server requires authentication
use_auth = True
# Webdav username
user =
# Webdav password
password =
